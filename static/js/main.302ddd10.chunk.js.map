{"version":3,"sources":["components/PhoneBook/redux/actions/actionTipes.js","components/PhoneBook/redux/reducers/appReducer.js","components/PhoneBook/redux/reducers/rootReducer.js","components/PhoneBook/redux/store.js","components/PhoneBook/Form/InputForm.js","components/PhoneBook/Buttons/BntFormSubmit.js","components/PhoneBook/Form/SearchForm.js","components/PhoneBook/redux/actions/actions.js","components/PhoneBook/Buttons/BntFormDelete.js","components/PhoneBook/Contacts/ContactListItem.js","components/PhoneBook/Contacts/ContactList.js","components/PhoneBook/FindedContact/FindedContact.js","components/PhoneBook/App.js","index.js"],"names":["initialState","id","name","phone","combineReducers","appReducer","state","actions","type","types","payload","contact","filtered","filter","filteredReducer","console","log","rootReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","InputForm","handleChange","config","placeholder","minLength","maxLength","value","style","width","onChange","BntFormSubmit","border","password","gender","SearchForm","target","setState","contactsVerification","clients","client1","some","client","handleSubmit","event","preventDefault","date","Date","toDateString","shortID","props","addContact","onSubmit","this","inputName","inputPhone","backgroundColor","Component","connect","dispath","contacts","onDelComponent","margin","height","onClick","ContactListItem","className","padding","display","flexDirection","alignItems","justifyContent","borderRadius","filteredContacts","length","map","FindedContact","userSelector","toLowerCase","includes","prevProps","prevState","filteredClients","onClearArray","filterContact","arr","onFilterContact","App","getState","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.302ddd10.chunk.js","sourcesContent":["export default {\r\n  ADD_CONTACT: \"ADD_CONTACT\",\r\n  // CHANGE_CONTACT: \"CHANGE_CONTACT\",\r\n  DELETE_CONTACT: \"DELETE_CONTACT\",\r\n  FILTER_CONTACT: \"FILTER_CONTACT\",\r\n  CLEAR_ARRAY: \"CLEAR_ARRAY\",\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport types from \"./../actions/actionTipes\";\r\nconst initialState = [\r\n  { id: \"323423r\", name: \"Rosie Simpson\", phone: \"459-12-56\" },\r\n  { id: \"iwrwe2\", name: \"Hermione Kline\", phone: \"443-89-12\" },\r\n  { id: \"ir43d-3\", name: \"Eden Clements\", phone: \"645-17-79\" },\r\n  { id: \"idwer-4\", name: \"Annie Copeland\", phone: \"227-91-26\" },\r\n];\r\n\r\nconst appReducer = (state = [...initialState], actions) => {\r\n  // const appReducer = (state = [...initialState], actions) => {\r\n  // console.log(\"actionsappReducer\", actions);\r\n  switch (actions.type) {\r\n    case types.ADD_CONTACT:\r\n      return [...state, actions.payload.contact];\r\n\r\n    case types.DELETE_CONTACT:\r\n      const filtered = state.filter((contact) => {\r\n        return contact.id !== actions.payload;\r\n      });\r\n      return filtered;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//filter\r\nconst filteredReducer = (state = [], actions) => {\r\n  // console.log(\"actionfilteredReducer\", actions.payload);\r\n\r\n  switch (actions.type) {\r\n    case types.FILTER_CONTACT:\r\n      console.log(\"object\", actions.payload);\r\n      return actions.payload;\r\n\r\n    case types.DELETE_CONTACT:\r\n      const filtered = state.filter((contact) => {\r\n        return contact.id !== actions.payload;\r\n      });\r\n      return filtered;\r\n\r\n    case types.CLEAR_ARRAY:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ appReducer, filteredReducer });\r\n","import { combineReducers } from \"redux\";\r\n// import { addContactReduser } from \"./redusers\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  appReducer,\r\n//   addContactReduser,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n} from \"redux-persist\"; /* save to localSTORE */\r\nimport storage from \"redux-persist/lib/storage\"; /* save to localSTORE */\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  //   blacklist: [\"todo/id\"],\r\n};\r\n\r\nexport const persistedReducer = persistReducer(\r\n  persistConfig,\r\n  rootReducer\r\n); /* save to localSTORE */\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n); /* save to localSTORE */\r\nexport const persistor = persistStore(store); /* save to localSTORE */\r\n\r\n// console.log(\"store.getState()\", store.getState());\r\n","import React from \"react\";\r\n\r\nexport function InputForm({\r\n  handleChange,\r\n  config: { name, placeholder, minLength, maxLength, type },\r\n  value,\r\n}) {\r\n  return (\r\n    <>\r\n      <label>\r\n        {name}\r\n        <input\r\n          style={{ width: 280 }}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          minLength={minLength}\r\n          maxLength={maxLength}\r\n          type={type}\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}","import React from 'react'\r\n \r\nexport const BntFormSubmit = () => (\r\n    <button style={{ width: 280, border: \"2px dotted white\" }} \r\n    type=\"submit\">Submit</button>  \r\n);\r\n    ","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport shortID from \"shortid\";\n\n// import sytles from \"./Phonebook.module.css\";\nimport config from \"../config.json\";\nimport { InputForm } from \"./InputForm\";\nimport { BntFormSubmit } from \"../Buttons/BntFormSubmit\";\nimport { addContact } from \"../redux/actions/actions.js\";\n// const {} = sytles;\nconst initialState = {\n  name: \"\",\n  phone: \"\",\n  password: \"\",\n  gender: \"\",\n  id: \"\",\n};\n\nclass SearchForm extends Component {\n  state = { ...initialState };\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n  contactsVerification = (clients, client1) => {\n    return clients.some((client) => client.name === client1.name);\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const client = {\n      ...this.state,\n      date: new Date().toDateString(),\n      id: shortID(),\n    };\n    this.props.addContact(client);\n\n    // if (this.state.name !== \"\" && this.state.phone !== \"\") {\n    //   if (!this.contactsVerification(this.props.clients, client)) {\n    //     this.props.addContact(client);\n    //     console.log('this.props.clients', this.props.clients)\n    //   }\n    // }\n    // this.resetForm();\n    this.setState(initialState);\n  };\n  // resetForm = () => {\n  //   this.setState(\n  //     {\n  //       name: \"\",\n  //       password: \"\",\n  //       gender: \"\",\n  //       phone: \"\",\n  //     },\n  //     () => console.log(this.state)\n  //   );\n  // };\n\n  render() {\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        style={{ width: 300, border: \"2px dotted white\" }}\n      >\n        <InputForm\n          handleChange={this.handleChange}\n          value={this.state.name}\n          config={config.inputName}\n        />\n        <InputForm\n          handleChange={this.handleChange}\n          value={this.state.phone}\n          config={config.inputPhone}\n        />\n        <label>\n          <select\n            style={{\n              width: 280,\n              border: \"2px dotted white\",\n              backgroundColor: \"grey\",\n            }}\n            name=\"gender\"\n            value={this.state.gender}\n            onChange={this.handleChange}\n          >\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n          </select>\n        </label>\n        <BntFormSubmit />\n      </form>\n    );\n  }\n}\nconst mapDispatchToProps = (dispath) => {\n  return {\n    addContact: (client) => dispath(addContact(client)),\n};}\n\nconst mapStateToProps = (state) => {\n  // console.log('state', state)\n  return {clients: state.appReducer.clients, // filter: state.appReducer.filter,};}\n}}\n// const mapDispatchToProps = (dispath) => ({\n//   addContact: (client) => dispath(addContact(client)),\n// });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\n","import types from \"./actionTipes\";\r\n\r\nexport const addContact = (contact) => {\r\n  return {\r\n    type: types.ADD_CONTACT,\r\n    payload: {\r\n      contact,\r\n    },\r\n  };\r\n};\r\n\r\nexport const delComponent = (contacts, id) => {\r\n  return {\r\n    type: types.DELETE_CONTACT,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const onFilterContact = (filterContact) => {\r\n  console.log(\"filterContact\", filterContact);\r\n  return {\r\n    type: types.FILTER_CONTACT,\r\n\r\n    payload: filterContact,\r\n  };\r\n};\r\nexport const onClearArray = () => {\r\n\r\n  return {\r\n    type: types.CLEAR_ARRAY,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { delComponent } from \"../redux/actions/actions\";\r\n\r\nconst BntFormDelete = ({ contacts, id, onDelComponent }) => {\r\n  return (\r\n    <button\r\n      style={{ margin: 10, width: 50, height: 25, border: \"2px dotted white\" }}\r\n      onClick={() => onDelComponent(contacts, id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({contacts: state.appReducer});\r\n\r\nexport default connect(mapStateToProps, {onDelComponent: delComponent})(BntFormDelete);\r\n","import React from \"react\";\r\nimport BntFormDelete from \"../Buttons/BntFormDelete\";\r\nconst ContactListItem = ({ client: { id, name, phone } }) => {\r\n  // console.log('idContactListItem', id)\r\n  return (\r\n    <p className=\"clientName\">\r\n      {name}: {phone}\r\n      <BntFormDelete id={id} />\r\n    </p>\r\n  );\r\n};\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport { connect } from \"react-redux\";\r\nconst style = {\r\n  padding: \"10px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  width: 280,\r\n  borderRadius: \"15%\",\r\n  border: \"2px dotted white\",\r\n  backgroundColor: \"black\",\r\n};\r\n\r\nconst ContactList = (props) => {\r\n  const { clients, filteredContacts } = props;\r\n  // console.log(\"filteredContacts\", filteredContacts);\r\n  // return filteredContacts && {   filteredContacts.map((client) => (\r\n  console.log(\"filteredContacts.length >0\", filteredContacts.length > 0);\r\n  return filteredContacts.length === 0\r\n    ? clients.map((client) => (\r\n        <div className={style} key={client.id}>\r\n          <ContactListItem client={client} />\r\n        </div>\r\n      ))\r\n    : filteredContacts.map((client) => (\r\n        <div className={style} key={client.id}>\r\n          <ContactListItem client={client} />\r\n        </div>\r\n      ));\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log('state.filteredReducer', state.filteredReducer)\r\n  return {\r\n    clients: state.appReducer.appReducer,\r\n    filteredContacts: state.appReducer.filteredReducer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n\r\n// const ContactList = (props) => {\r\n//   const { clients: clientsFromProps, clientsFromSearch } = props;\r\n//   // return clientsFromSearch && {   clientsFromSearch.map((client) => (\r\n//   return clientsFromSearch !== \"\"\r\n//     ? clientsFromSearch.map((client) => (\r\n//         <div\r\n//           className=\"contactList\"\r\n//           key={client.id}\r\n//           style={{\r\n//             padding: \"10px\",\r\n//             display: \"flex\",\r\n//             flexDirection: \"column\",\r\n//             alignItems: \"center\",\r\n//             justifyContent: \"center\",\r\n//             width: 280,\r\n//             borderRadius: \"15%\",\r\n//             border: \"2px dotted white\",\r\n//             backgroundColor: \"black\",\r\n//           }}\r\n//         >\r\n//           <ContactListItem client={client} />\r\n//         </div>\r\n//       ))\r\n//     : clientsFromProps.map((client) => (\r\n//         <div\r\n//           className=\"contactList\"\r\n//           key={client.id}\r\n//           style={{\r\n//             padding: \"10px\",\r\n//             display: \"flex\",\r\n//             flexDirection: \"column\",\r\n//             alignItems: \"center\",\r\n//             justifyContent: \"center\",\r\n//             width: 280,\r\n//             borderRadius: \"15%\",\r\n//             border: \"2px dotted white\",\r\n//             backgroundColor: \"black\",\r\n//           }}\r\n//         >\r\n//           <ContactListItem client={client} />\r\n//         </div>\r\n//       ));\r\n// };\r\n\r\n// const ContactList = (props) => {\r\n//   const { clients: clientsFromProps, clientsFromSearch } = props;\r\n//   console.log('clientsFromSearch', clientsFromSearch)\r\n//   console.log('clientsFromProps', clientsFromProps)\r\n\r\n//   if (!clientsFromProps.length) {\r\n//     alert(\"Enter first name\");\r\n//   }\r\n//   return clientsFromProps.length ? (\r\n//     clientsFromProps.map((client) => (\r\n//       <div\r\n//         className=\"contactList\"\r\n//         key={client.id}\r\n//         style={{\r\n//           padding: \"10px\",\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           alignItems: \"center\",\r\n//           justifyContent: \"center\",\r\n//           width: 280,\r\n//           borderRadius: \"15%\",\r\n//           border: \"2px dotted white\",\r\n//           backgroundColor: \"black\",\r\n//         }}\r\n//       >\r\n//         <ContactListItem client={client} />\r\n//       </div>\r\n//     ))\r\n//   ) : (\r\n//     <div className=\"contactList\">\r\n//       <p>Contacts is not available</p>\r\n//     </div>\r\n//   );\r\n// };\r\n// const mapStateToProps = (state) => ({ clients: state.appReducer });\r\n\r\n// export default connect(mapStateToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\n\r\nimport ContactList from \"../Contacts/ContactList\";\r\nimport { onFilterContact, onClearArray } from \"../redux/actions/actions\";\r\n\r\nconst initialState = {\r\n  filter: \"\",\r\n};\r\n\r\nclass FindedContact extends Component {\r\n  state = initialState;\r\n  handleChange = ({ target: { value } }) => {\r\n    this.setState({ filter: value });\r\n  };\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    const filteredClients = await this.userSelector(\r\n      this.props.clients,\r\n      this.state.filter\r\n    );\r\n    if (prevState.filter !== this.state.filter && this.state.filter === \"\") {\r\n      console.log('this.state.filter === \"\"', this.state.filter === \"\");\r\n      return this.props.onClearArray();\r\n    }\r\n    if (prevState.filter === this.state.filter) return;\r\n    this.props.filterContact(filteredClients);\r\n    // this.setState((state) => ({ ...state, filteredClients }));\r\n  }\r\n\r\n  userSelector = (clients, filter) => {\r\n    const { appReducer } = clients;\r\n    return appReducer.filter((client) =>\r\n      client.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={\"Enter name to Saerch...\"}\r\n          value={this.state.filter}\r\n          onChange={this.handleChange}\r\n        />\r\n        <div>\r\n          <ContactList />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state\", state);\r\n  return {\r\n    clients: state.appReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispath) => ({\r\n  filterContact: (arr) => dispath(onFilterContact(arr)),\r\n  onClearArray: () => dispath(onClearArray()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FindedContact);\r\n","import React from \"react\";\nimport SearchForm from \"./Form/SearchForm\";\nimport  FindedContact  from \"./FindedContact/FindedContact\";\n\nconst App = () => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: 280,\n      border: \"2px dotted white\",\n      backgroundColor: \"black\",\n    }}\n  >\n    <SearchForm />\n    <FindedContact />\n  </div>\n);\n\nexport default App;\n\n// const userSelector = (clients, filter) =>\n//   clients.filter((client) =>\n//     client.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n// class App extends Component {\n//   // componentDidMount() {\n//   //   this.setState({\n//   //     clients: localStorage.getItem(\"clients\")\n//   //       ? JSON.parse(localStorage.getItem(\"clients\"))\n//   //       : this.props.clients,\n//   //   });\n//   // }\n\n//   // filterClient = ({ target: { value } }) => {\n//   //   this.setState({ filter: value });\n//   // };\n//   // addClientData = (client) => {\n//   //   this.setState((prev) => {\n//   //     localStorage.setItem(\n//   //       \"clients\",\n//   //       JSON.stringify([...prev.clients, client])\n//   //     );\n//   //     return { clients: [...prev.clients, client] };\n//   //   });\n//   // };\n\n//   render() {\n//     // const { clients, filter } = this.props;\n//     // const filteredClients = userSelector(clients, filter);\n//     return (\n//       <div\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//           width: 280,\n//           border: \"2px dotted white\",\n//           backgroundColor: \"black\",\n//         }}\n//       >\n//         <Form />\n//         <FindedContact />\n\n//         {/* <FindedContact\n//           onfilterClient={this.filterClient}\n//           value={filter}\n//           filteredClients={filteredClients}\n//           onDelComponent={this.delComponent}\n//         /> */}\n//       </div>\n//     );\n//   }\n// }\n// // const mapStateToProps = (state) => {\n// //   console.log(\"state\", state);\n// //   return {\n// //     clients: state.appReducer.clients,\n// //     filter: state.appReducer.filter,\n// //   };\n// // };\n\n// // const mapDispatchToProps = (dispath) => {\n// //   return {\n// //     addContact: () => dispath(addContact()),\n// //   };\n// // };\n\n// // export default connect(mapStateToProps, mapDispatchToProps)(App);\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./styles.css\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./components/PhoneBook/redux/store\";\nimport App from \"./components/PhoneBook/App\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n// console.log('persistor', persistor.getState())\nconsole.log('store.getState(', store.getState())\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}